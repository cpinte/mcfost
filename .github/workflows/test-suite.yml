name: test-suite

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  MCFOST_NO_XGBOOST: yes
  MCFOST_GIT: "1"
  SKIP_HDF5: yes

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [linux, macos]
        compiler: [gfortran, ifort]
        openmp: [yes, no]

        include:
          # Associate specific os versions with our os tags
          - os: linux
            os-version: ubuntu-22.04
          - os: macos
            os-version: macos-12
          
          # macos needs null container to avoid loading docker; set linux containers as desired
          - container: null
          - os: linux
            compiler: gfortran
            container: "quay.io/pypa/manylinux_2_28_x86_64"
          - os: linux
            compiler: ifort
            container: "intel/oneapi-hpckit:2023.2-devel-ubuntu22.04"

    runs-on: ${{ matrix.os-version }}
    container: ${{ matrix.container }}
    env:
      SYSTEM: ${{ matrix.compiler }}
      HDF5_DIR: /usr/local
      MCFOST_INSTALL: /usr/local
      OPENMP: ${{ matrix.openmp }}
    
    steps:
      - uses: actions/checkout@v2

      - run: git config --global --add safe.directory $PWD

      # Actions doesn't seem to have a way to evaluate expressions in paths these 'uses' are hardcoded in
      - name: build and install dependencies (linux)
        if: matrix.os == 'linux'
        uses: ./.github/actions/dependencies/linux

      - name: build and install dependencies (macos)
        if: matrix.os == 'macos'
        uses: ./.github/actions/dependencies/macos

      - name: compile mcfost
        working-directory: src
        shell: bash -e {0}
        run: |
          [ ! "$SETVARS_COMPLETED" == 1 ] && test -f /opt/intel/oneapi/setvars.sh && . /opt/intel/oneapi/setvars.sh
          make all

      - name: test
        uses: ./.github/actions/test
