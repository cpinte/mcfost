name: test-suite

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  MCFOST_NO_XGBOOST: yes
  MCFOST_GIT: "1"
  SKIP_HDF5: yes

jobs:
  macos:
    strategy:
      matrix:
        compiler: [gfortran, ifort]

    runs-on: macos-12
    env:
      SYSTEM: ${{ matrix.compiler }}
      HDF5_DIR: /usr/local
      MCFOST_INSTALL: /usr/local
    steps:
      - uses: actions/checkout@v2

      - name: install intel compilers
        if: ${{ matrix.compiler == 'ifort' }}
        run: |
          sudo wget https://registrationcenter-download.intel.com/akdlm/IRC_NAS/2fbce033-15f4-4e13-8d14-f5a2016541ce/m_fortran-compiler-classic_p_2023.2.0.49001_offline.dmg
          hdiutil attach m_fortran-compiler-classic_p_2023.2.0.49001_offline.dmg
          sudo /Volumes/m_fortran-compiler-classic_p_2023.2.0.49001_offline/bootstrapper.app/Contents/MacOS/install.sh --silent --eula accept
          cp /opt/intel/oneapi/compiler/2023.2.0/mac/bin/intel64/ifort /usr/local/include
          source /opt/intel/oneapi/setvars.sh 
          echo "Do we have ifort?"
          which ifort

      - name: install dependencies
        uses: ./.github/actions/dependencies/macos

      - name: compile mcfost
        if: ${{ matrix.compiler == 'gfortran' }}
        working-directory: src
        run: make all

      - name: compile mcfost (intel)
        if: ${{ matrix.compiler == 'ifort' }}
        working-directory: src
        run: |
          source /opt/intel/oneapi/setvars.sh 
          make all

      - name: test
        uses: ./.github/actions/test

  linux:
    strategy:
      matrix:
        toolchain:
          - {compiler: gfortran, container: quay.io/pypa/manylinux_2_28_x86_64}
          - {compiler: ifort, container: "intel/oneapi-hpckit:2023.2-devel-ubuntu22.04"}

    runs-on: ubuntu-22.04
    container: ${{ matrix.toolchain.container }}
    env:
      SYSTEM: ${{ matrix.toolchain.compiler }}
      HDF5_DIR: /usr
      MCFOST_INSTALL: /opt/local
    steps:
      - uses: actions/checkout@v2

      # hdf5.mod file is located at /usr/lib64/gfortran/modules/ on almalinux
      - name: install hdf5 for gnu build
        if: ${{ matrix.toolchain.compiler == 'gfortran' }}
        run: |
          dnf install -y sudo wget epel-release
          dnf install -y hdf5-static redhat-lsb-core
          cd /usr/include && ln -s /usr/lib64/gfortran/modules/* .

      - name: install hdf5 for intel build
        if: ${{ matrix.toolchain.compiler == 'ifort' }}
        run: |
          export CC=icc
          export FC=ifort
          export CXX=icpc
          export CFLAGS=""
          wget -N https://support.hdfgroup.org/ftp/HDF5/current/src/hdf5-1.10.5.tar.bz2
          echo "Compiling HDF5 ..."
          tar xjvf hdf5-1.10.5.tar.bz2
          cd hdf5-1.10.5
          mkdir -p "$HOME/hdf5_install_tmp"
          ./configure --prefix="$HOME/hdf5_install_tmp" --enable-fortran --disable-shared
          make install
          \cp "$HOME/hdf5_install_tmp/lib/libhdf5.a" "$HOME/hdf5_install_tmp/lib/libhdf5_fortran.a" /usr/lib/
          mkdir /usr/include/hdf5
          \cp "$HOME"/hdf5_install_tmp/include/*.h /usr/include/hdf5/
          \cp "$HOME"/hdf5_install_tmp/include/*.mod /usr/include/
          echo "Done"


      - run: git config --global --add safe.directory $PWD

      - name: build and install dependencies
        uses: ./.github/actions/dependencies/linux

      - name: compile mcfost
        working-directory: src
        run: make all

      - name: test
        uses: ./.github/actions/test
