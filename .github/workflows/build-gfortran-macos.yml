name: build-gfortran-macos

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

      # Check if the dependency cache exists
      # If it does, restore those paths; otherwise these paths are cached at the end of the workflow
      # NOTE: Cache can be cleared manually from the Github actions webpage
    - name: cache dependencies
      id: cache-deps
      uses: actions/cache@v3
      env:
        cache-name: cache-mcfost-dependencies
      with:
        path: |
          /usr/local/Cellar/gcc/13.1.0
          /usr/local/Cellar/hdf5/1.14.1
          /usr/local/Cellar/cfitsio/4.3.0
          /usr/local/Cellar/voro-dev/0.4.6+
          /usr/local/Cellar/sprng2/2.0
        key: ${{ runner.os }}-build-${{ env.cache-name }}

      # Restoring the brew installs from cache doesn't put files where mcfost expects
      # Manually create symlinks so the compiler can find everything
    - if: ${{ steps.cache-deps.outputs.cache-hit == 'true' }}
      name: add symbolic links if cache exists
      run: |
        ln -s /usr/local/Cellar/gcc/13.1.0/bin/gfortran /usr/local/bin/gfortran
        ln -s /usr/local/Cellar/sprng2/2.0/include/* /usr/local/include
        ln -s /usr/local/Cellar/sprng2/2.0/lib/* /usr/local/lib
        ln -s /usr/local/Cellar/voro-dev/0.4.6+/include/* /usr/local/include
        ln -s /usr/local/Cellar/voro-dev/0.4.6+/lib/libvoro++* /usr/local/lib
        ln -s /usr/local/Cellar/hdf5/1.14.1/include/* /usr/local/include
        ln -s /usr/local/Cellar/hdf5/1.14.1/lib/lib* /usr/local/lib
        ln -s /usr/local/Cellar/cfitsio/4.3.0/lib/libcfitsio* /usr/local/lib

      # Only do these install steps if no cache is found
    - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
      name: install gfortran
      run: brew reinstall gcc

    - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
      name: install hdf5
      run: brew install hdf5

    - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
      name: install cfitsio
      run: brew install cfitsio

    - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
      name: get custom taps needed for mcfost
      run: brew tap danieljprice/all

    - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
      name: install voro++
      run: brew install voro-dev

    - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
      name: install sprng2
      run: brew install sprng2

    - name: compile mcfost
      env:
           MCFOST_INSTALL: "/usr/local"
           MCFOST_NO_XGBOOST: "yes"
           SYSTEM: "gfortran"
           MCFOST_GIT: "1"
      run: |
           cd src
           make all INCLUDE=-I/usr/local/include LIBS=/usr/local/lib
