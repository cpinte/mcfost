name: "macos"
description: "Build macos"

runs:
  using: "composite"
  steps:
    # Check if the dependency cache exists
    # If it does, restore those paths; otherwise these paths are cached at the end of the workflow
    # NOTE: Cache can be cleared manually from the Github actions webpage
    - name: cache dependencies
      id: cache-deps
      uses: actions/cache@v3
      env:
        cache-name: cache-mcfost-dependencies
      with:
        path: |
          /usr/local/Cellar/gcc/13.1.0
          /usr/local/Cellar/cfitsio/4.3.0
          /usr/local/Cellar/voro-dev/0.4.6+
          /usr/local/Cellar/sprng2/2.0
        key: ${{ runner.os }}-build-${{ env.cache-name }}

      # Symlinks to the path need to be created again after the cache is restored
    - if: ${{ steps.cache-deps.outputs.cache-hit == 'true' }}
      name: add brew links if cache exists
      shell: bash
      run: |
        brew unlink gcc && brew link gcc
        brew link cfitsio
        brew link voro-dev
        brew link sprng2

      # Only do these install steps if no cache is found
    - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
      name: install gfortran
      shell: bash
      run: brew reinstall gcc

    - name: install hdf5
      shell: bash
      run: brew install hdf5

    - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
      name: install cfitsio
      shell: bash
      run: brew install cfitsio

    - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
      name: get custom taps needed for mcfost
      shell: bash
      run: brew tap danieljprice/all

    - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
      name: install voro++
      shell: bash
      run: brew install voro-dev

    - if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
      name: install sprng2
      shell: bash
      run: brew install sprng2

    - name: compile mcfost
      env:
        MCFOST_INSTALL: "/usr/local"
        MCFOST_NO_XGBOOST: "yes"
        SYSTEM: "gfortran"
        MCFOST_GIT: "1"
      shell: bash
      run: |
        cd src
        make all INCLUDE=-I/usr/local/include LIBS=/usr/local/lib
