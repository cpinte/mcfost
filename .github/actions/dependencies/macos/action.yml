name: "macos"
description: "macos dependencies"

runs:
  using: "composite"
  steps:
    - name: install intel compilers
      if: ${{ matrix.compiler == 'ifort' }}
      shell: bash
      run: |
        wget https://registrationcenter-download.intel.com/akdlm/IRC_NAS/2fbce033-15f4-4e13-8d14-f5a2016541ce/m_fortran-compiler-classic_p_2023.2.0.49001_offline.dmg
        wget https://registrationcenter-download.intel.com/akdlm/IRC_NAS/ebba13f8-1690-4d30-9d43-1e2fa2d536cd/m_cpp-compiler-classic_p_2023.2.0.48999_offline.dmg
        hdiutil attach m_fortran-compiler-classic_p_2023.2.0.49001_offline.dmg
        sudo /Volumes/m_fortran-compiler-classic_p_2023.2.0.49001_offline/bootstrapper.app/Contents/MacOS/install.sh --silent --eula accept
        hdiutil attach m_cpp-compiler-classic_p_2023.2.0.48999_offline.dmg
        sudo /Volumes/m_cpp-compiler-classic_p_2023.2.0.48999_offline/bootstrapper.app/Contents/MacOS/install.sh --silent --eula accept

    - name: fix gcc issue on the runner
      if: ${{ matrix.compiler == 'gfortran' }}
      shell: bash
      run: |
        brew reinstall gcc@13
        ln -s /usr/local/bin/gcc-13 /usr/local/bin/gcc
        ln -s /usr/local/bin/g++-13 /usr/local/bin/g++

    # Check if the dependency cache exists
    # If it does, restore those paths; otherwise these paths are cached at the end of the workflow
    # NOTE: Cache can be cleared manually from the Github actions webpage
    - name: cache dependencies
      id: cache-deps
      uses: actions/cache@v3
      with:
        path: ${{ env.MCFOST_INSTALL }}
        key: mcfost-deps-${{ runner.os }}-${{ matrix.compiler }}-${{ hashFiles('lib/install.sh') }}


      # Only do these install steps if no cache is found
    - name: install deps
      if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
      shell: bash -e {0}
      working-directory: lib
      run: |
        [ ! "$SETVARS_COMPLETED" == 1 ] && test -f /opt/intel/oneapi/setvars.sh && . /opt/intel/oneapi/setvars.sh
        ./install.sh
