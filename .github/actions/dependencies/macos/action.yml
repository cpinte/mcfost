name: "macos"
description: "macos dependencies"

runs:
  using: "composite"
  steps:
    - name: install intel compilers
      if: ${{ matrix.compiler == 'ifort' }}
      shell: bash
      run: |
        wget https://registrationcenter-download.intel.com/akdlm/IRC_NAS/2fbce033-15f4-4e13-8d14-f5a2016541ce/m_fortran-compiler-classic_p_2023.2.0.49001_offline.dmg
        wget https://registrationcenter-download.intel.com/akdlm/IRC_NAS/ebba13f8-1690-4d30-9d43-1e2fa2d536cd/m_cpp-compiler-classic_p_2023.2.0.48999_offline.dmg
        hdiutil attach m_fortran-compiler-classic_p_2023.2.0.49001_offline.dmg
        sudo /Volumes/m_fortran-compiler-classic_p_2023.2.0.49001_offline/bootstrapper.app/Contents/MacOS/install.sh --silent --eula accept
        hdiutil attach m_cpp-compiler-classic_p_2023.2.0.48999_offline.dmg
        sudo /Volumes/m_cpp-compiler-classic_p_2023.2.0.48999_offline/bootstrapper.app/Contents/MacOS/install.sh --silent --eula accept
        cp /opt/intel/oneapi/compiler/2023.2.0/mac/bin/intel64/ifort /usr/local/include
    
    # Check if the dependency cache exists
    # If it does, restore those paths; otherwise these paths are cached at the end of the workflow
    # NOTE: Cache can be cleared manually from the Github actions webpage
    - name: cache dependencies
      id: cache-deps
      uses: actions/cache@v3
      with:
        path: |
          /usr/local/Cellar/gcc/
          /usr/local/Cellar/cfitsio/
          /usr/local/Cellar/voro-dev/
          /usr/local/Cellar/sprng2/
        key: mcfost-deps-${{ runner.os }}-${{ matrix.toolchain.compiler }}-${{ hashFiles('lib/install.sh') }}

      # Symlinks to the path need to be created again after the cache is restored
    - name: add brew links
      if: ${{ steps.cache-deps.outputs.cache-hit == 'true' }}
      shell: bash
      run: |
        brew unlink gcc
        brew link gcc
        brew link cfitsio
        brew link voro-dev
        brew link sprng2

      # Only do these install steps if no cache is found
    - name: install deps
      if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
      shell: bash
      run: |
        brew tap danieljprice/all
        brew reinstall gcc
        brew install cfitsio voro-dev sprng2

    # Always install hdf5, it's too problematic to cache (because it has dependencies)
    - name: install hdf5 (gfortran)
      if: ${{ matrix.compiler == 'gfortran' }}
      shell: bash
      run: |
        brew install hdf5

    # Brew installs the gcc version. Intel requires some more work
    - name: install hdf5 (ifort)
      if: ${{ matrix.compiler == 'ifort' }}
      shell: bash
      run: |
          export CFLAGS=""
          source /opt/intel/oneapi/setvars.sh 
          wget -N https://support.hdfgroup.org/ftp/HDF5/current/src/hdf5-1.10.5.tar.bz2
          tar xjvf hdf5-1.10.5.tar.bz2
          cd hdf5-1.10.5
          sudo CC=icc FC=ifort CXX=icpc ./configure --prefix=/usr/local --enable-fortran  --enable-cxx
          sudo make
          sudo make install

